{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","setInterval","setState","this","prev","oldName","name","props","console","log","toLocaleTimeString","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,SACzB,KAPL,uDASE,WACE,OAAOI,KAAKH,QAVhB,gCAaE,SAAmBI,GACjB,IAAMC,EAAUD,EAAKE,KAErB,OAAQD,IAAYF,KAAKI,MAAMD,KAE7BE,QAAQC,IAAIN,KAAKN,MAAMC,KAAKY,sBAE5BF,QAAQC,IAAR,qCAA0CJ,EAA1C,eAAwDF,KAAKI,MAAMD,SApBzE,kCAuBE,WACEK,cAAcR,KAAKH,SAxBvB,oBA2BE,WACE,IAAQF,EAASK,KAAKN,MAAdC,KAER,OACE,8BACE,+BAAOA,EAAKY,6BAhCpB,GAA2BE,IAAMC,WCDpBC,EAAb,4MACEjB,MAAe,CACbkB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,KAXpC,EAcEI,cAAgB,WACd,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAf/C,4CAkBE,WACE,IAAQP,EAAmBZ,KAAKN,MAAxBkB,eAER,OACE,sBAAKQ,UAAU,MAAf,UACE,6CAEG,IACApB,KAAKN,MAAMmB,aAEd,gDAEG,IACAD,GAAkB,cAAC,EAAD,CAAOT,KAAMH,KAAKN,MAAMmB,eAG7C,wBACEQ,KAAK,SACLD,UAAU,cACVE,QAAStB,KAAKc,UAHhB,wBAQA,wBACEO,KAAK,SACLD,UAAU,cACVE,QAAStB,KAAKe,UAHhB,wBAQA,wBACEM,KAAK,SACLD,UAAU,cACVE,QAAStB,KAAKgB,cAHhB,oCAlDR,GAAyBP,IAAMC,WCN/Ba,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b85b25cc.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timer = setInterval(() => {\n    this.setState({ date: new Date() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(prev: Props) {\n    const oldName = prev.name;\n\n    return (oldName === this.props.name\n    // eslint-disable-next-line\n    ? console.log(this.state.date.toLocaleTimeString())\n    // eslint-disable-next-line\n    : console.log(`The Clock was renamed from ${oldName} to ${this.props.name}`))\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div>\n        <span>{date.toLocaleTimeString()}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          React clock\n          {' '}\n          {this.state.clockName}\n        </h1>\n        <div>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={this.state.clockName} /> }\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}