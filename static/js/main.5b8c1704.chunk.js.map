{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timer","setInterval","setState","prev","oldName","name","console","log","this","toLocaleTimeString","props","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","clock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,WAClB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,SACzB,KAPL,wDASE,SAAmBI,GACjB,IAAMC,EAAUD,EAAKE,KAGrBC,QAAQC,IAAIC,KAAKX,MAAMC,KAAKW,sBAExBL,IAAYI,KAAKE,MAAML,MAEzBC,QAAQC,IAAR,qCAA0CH,EAA1C,eAAwDI,KAAKE,MAAML,SAjBzE,kCAqBE,WACEM,cAAcH,KAAKR,SAtBvB,oBAyBE,WACE,IAAQF,EAASU,KAAKX,MAAdC,KAER,OACE,8BACG,iBACD,+BAAOA,EAAKW,8BA/BpB,GAA2BG,IAAMC,WCDpBC,EAAb,4MACEjB,MAAe,CACbkB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,KAPpC,EAUEG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,KAXpC,EAcEI,cAAgB,WACd,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aAf/C,4CAkBE,WACE,IACMC,EADqBf,KAAKX,MAAxBkB,gBACwB,cAAC,EAAD,CAAOV,KAAMG,KAAKX,MAAMmB,YAExD,OACE,sBAAKQ,UAAU,MAAf,gCACkBhB,KAAKX,MAAMmB,WAC1BO,EAED,wBACEE,KAAK,SACLD,UAAU,cACVE,QAASlB,KAAKS,UAHhB,wBAQA,wBACEQ,KAAK,SACLD,UAAU,cACVE,QAASlB,KAAKU,UAHhB,wBAQA,wBACEO,KAAK,SACLD,UAAU,cACVE,QAASlB,KAAKW,cAHhB,oCA3CR,GAAyBP,IAAMC,WCN/Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5b8c1704.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: number;\n}\n\ninterface State {\n  date: Date;\n}\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n  };\n\n  timer = setInterval(() => {\n    this.setState({ date: new Date() });\n  }, 1000);\n\n  componentDidUpdate(prev: Props) {\n    const oldName = prev.name;\n\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString())\n\n    if (oldName !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${oldName} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        {'Current time: '}\n        <span>{date.toLocaleTimeString()}</span>\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ninterface State {\n  isClockVisible: boolean,\n  clockName: number,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 100) });\n  };\n\n  render() {\n    const { isClockVisible } = this.state;\n    const clock = isClockVisible && <Clock name={this.state.clockName} />;\n\n    return (\n      <div className=\"App\">\n        {`React clock ${this.state.clockName}`}\n        {clock}\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"App__button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}